trigger:
  branches:
    include:
    - main
pool:
  vmImage: 'windows-latest'
parameters:
- name: listOfEnv
  type: object
  default:
  - Environment: Dev
    AzureSubServiceConName: SubscriptionConnectiondev
    KeyVaultName: kv-ti-dev-eastus-01
    Projects:
      - ProjectName: X3Lostdev1
        KeyName: Okta-OktaAPIToken
        KeyName2: OktaDomain
stages:
- ${{ each parent in parameters.listOfEnv }} :
- stage: default
  jobs:
  - job: ReadKeyVaultSecrets
    steps:
    - task: AzureKeyVault@1
      displayName: 'Read Secrets from Azure Key Vault'
      inputs:
        azureSubscription: ${{ parent.AzureSubServiceConName}}
        KeyVaultName:  ${{ parent.KeyVaultName}}
        SecretsFilter: '*'
        RunAsPreJob: false
    - ${{ each project in parent.Projects}} :  
    - task: PowerShell@2
      displayName: 'Powershell script'
      inputs:
        targetType: 'inline'
        script: |
          $headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
          $headers.Add("Accept", "application/json")
          $headers.Add("Content-Type", "application/json")
          $headers.Add("Authorization", "SSWS $(project.KeyName)")
          echo "SSWS $(Okta-OktaAPIToken)"

          $response = Invoke-RestMethod '$(OktaDomain)/api/v1/users?limit=1' -Method 'GET' -Headers $headers
          $response | ConvertTo-Json
    - task: CmdLine@2
      inputs:
        script: "echo Secret 1: $(Okta-OktaAPIToken)"
